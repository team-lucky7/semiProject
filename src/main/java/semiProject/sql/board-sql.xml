<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<comment>board-sql.xml</comment>
	
	<!-- 게시판 이름 조회 -->
	<entry key="selectBoardName">
		SELECT BOARD_NM FROM BOARD_TYPE WHERE BOARD_CD = ?
	</entry>
	
	<!-- 특정 게시판의 전체 게시글 수 조회 -->
	<entry key="getListCount">
		SELECT COUNT(*) FROM BOARD WHERE BOARD_ST = 'N' AND BOARD_CD = ?
	</entry>
	
	<!-- 특정 게시판에서 일정한 범위의 목록 조회 -->
	<entry key="selectBoardList">
		SELECT * FROM(
		    SELECT ROWNUM AS RNUM, A.* FROM (
		        SELECT BOARD_NO, BOARD_TITLE, MEMBER_NM,
		            TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,
		            READ_COUNT, COUNT(BOARD_REPLY_NO) AS "LIKE_COUNT"
		        FROM BOARD
		        JOIN MEMBER USING(MEMBER_NO)
		        LEFT JOIN "LIKE" ON(BOARD_REPLY_NO = BOARD_NO)
		        WHERE BOARD_CD = 3
		        AND BOARD_ST = 'N'
		        GROUP BY BOARD_NO, BOARD_TITLE, MEMBER_NM,
		            TO_CHAR(CREATE_DT, 'YYYY-MM-DD'), READ_COUNT
		        ORDER BY BOARD_NO DESC
		    )A
		)
		WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- 게시글 상세조회 -->
	<entry key="selectBoardDetail">
		SELECT BOARD_NO, BOARD_NM, BOARD_TITLE,
		    BOARD_CONTENT, PROFILE_IMG, MEMBER_NM,
		    TO_CHAR(CREATE_DT, 'YYYY-MM-DD') AS CREATE_DT,
		    TO_CHAR(UPDATE_DT, 'YYYY-MM-DD') AS UPDATE_DT,
		    READ_COUNT, B.MEMBER_NO
		FROM BOARD B
		JOIN BOARD_TYPE USING(BOARD_CD)
		JOIN MEMBER M ON(B.MEMBER_NO = M.MEMBER_NO)
		WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 내용(글) 조회 -->
	<entry key="selectBoardArticle">
		SELECT BOARD_CT_NO, CONTENT, CONTENT_SIZE, CONTENT_LEVEL FROM BOARD_ARTICLE WHERE BOARD_NO = ?
	</entry>
	
	<!-- 게시글 내용(사진) 조회 -->
	<entry key="selectBoardImage">
		SELECT IMG_NO, IMG_SIZE, IMG_RENAME, IMG_ORIGINAL, IMG_LEVEL FROM BOARD_IMG WHERE BOARD_NO = ?
	</entry>
	
	<!-- 좋아요 누른 회원번호 목록 조회 -->
	<entry key="getLikeMember">
		SELECT * FROM "LIKE" WHERE BOARD_REPLY_NO = ?
	</entry>
	
	
	
	<!-- ========== 테마 ========== -->
	
	<!-- 테마 게시글 번호 조회 -->
	<entry key="nextBoardNo">
		SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
	</entry>
	
	<!-- 게시글 삽입 -->
	<entry key="insertThemaBoard">
		INSERT INTO BOARD VALUES(?,?,?,DEFAULT, DEFAULT, DEFAULT,DEFAULT,?,1,?)
	</entry>
	
	<!-- 게시글 이미지 삽입 -->
	<entry key ="insertThemaBoardImage">
		INSERT INTO BOARD_IMG VALUES(SEQ_IMG_NO.NEXTVAL,1,?,?,?,?)
	</entry>
	
	<!-- 테마 게시글 내용 조회  /// ** LOCATION_CODE, LOCATION_NAME(지역코드, 지역명) 들어와야함!-->
	<entry key="selectThemaBoardDetail">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		    TO_CHAR(CREATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') CREATE_DT,
		    TO_CHAR(UPDATE_DT, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') UPDATE_DT,
		    READ_COUNT, PROFILE_IMG, MEMBER_NO, BOARD_NM , LOCATION_NM
		FROM BOARD
		JOIN MEMBER USING(MEMBER_NO)
		JOIN BOARD_TYPE USING(BOARD_CD)
		JOIN LOCATION USING(LOCATION_CODE)
		WHERE BOARD_NO = ?
		AND BOARD_ST='N'		
	</entry>
	
	<!-- 테마 게시글 첨부된 이미지 조회 -->
	<entry key ="selectThemaImageList">
		SELECT * 
		FROM BOARD_IMG
		WHERE BOARD_NO = ?
		ORDER BY IMG_LEVEL
	</entry>
	
	<!-- 테마 게시글 삭제 -->
	<entry key="deleteThemaBoard">
		UPDATE BOARD SET
		BOARD_ST='Y'
		WHERE BOARD_NO=?
	</entry>
	
	<!-- 테마 게시판 이름 조회 -->
	<entry key ="selectThemaBoardName">
		SELECT BOARD_NM
		FROM BOARD_TYPE
		WHERE BOARD_CD=?
	</entry>
	
	<!-- 특정 게시판에서 일정한 범위의 목록 조회 -->
	<entry key="selectThemaBoardList1">
		SELECT BOARD_NO, BOARD_TITLE, LOCATION_NM, BOARD_CD, BOARD_NM,
		     (SELECT IMG_RENAME FROM BOARD_IMG
		     WHERE IMG_LEVEL= 0
		     AND BOARD_IMG.BOARD_NO = BOARD.BOARD_NO) THUMBNAIL
		FROM BOARD
		JOIN BOARD_TYPE USING(BOARD_CD)
		JOIN MEMBER USING(MEMBER_NO)
		JOIN LOCATION USING(LOCATION_CODE)
		WHERE BOARD_CD IN(
	</entry>
	
	<entry key="selectThemaBoardList2">
		)
		AND BOARD_ST='N'
		ORDER BY BOARD_NO DESC
	</entry>
	
</properties>
